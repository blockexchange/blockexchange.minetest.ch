version: "2"

x-blockexchange-defaults: &blockexchange_service
  image: blockexchange/blockexchange
  restart: always
  depends_on:
    - postgres
  env_file:
    - blockexchange.env
  labels:
    - "promtail=true"
    - "traefik.enable=true"
    - "traefik.docker.network=terminator"
    - "traefik.http.routers.blockexchange.rule=Host(`blockexchange.minetest.ch`)"
    - "traefik.http.routers.blockexchange.entrypoints=websecure"
    - "traefik.http.routers.blockexchange.tls.certresolver=default"
    - "traefik.http.services.blockexchange.loadbalancer.server.port=8080"
    - "traefik.http.services.blockexchange.loadbalancer.healthCheck.path=/api/healthcheck"
    - "traefik.http.services.blockexchange.loadbalancer.healthCheck.interval=1s"
    - "traefik.http.services.blockexchange.loadbalancer.healthCheck.timeout=500ms"

services:
 blockexchange_blue:
  <<: *blockexchange_service
  labels:
    - "traefik.http.routers.blockexchange-blue-metrics.rule=Host(`blockexchange.minetest.ch`) && Path(`/metrics`)"
    - "traefik.http.routers.blockexchange-blue-metrics.entrypoints=websecure"
    - "traefik.http.routers.blockexchange-blue-metrics.tls.certresolver=default"

 blockexchange_green:
  <<: *blockexchange_service

 redis:
  image: redis:7.2.1-alpine
  restart: always
  labels:
   - "promtail=true"

 postgres:
  image: postgres:14.7
  restart: always
  shm_size: '2gb'
  environment:
   POSTGRES_PASSWORD: enter
  labels:
   - "promtail=true"
  volumes:
   - "./data/postgres:/var/lib/postgresql/data"
  command:
   - "postgres"
   - "-c"
   - "shared_buffers=4GB"
   - "-c"
   - "synchronous_commit=off"

networks:
 terminator:
  external: true
